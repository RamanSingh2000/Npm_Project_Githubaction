

name: Node.js CI

on:
  push:
    branches: [ "main" ]
 

jobs:
  sonarqube:
    name: SonarQube Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Install dependencies
        run: yarn install
    
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  build:

    runs-on: ubuntu-latest
    steps:
    # checkout the repository content to github runner
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Node.js environment
      uses: actions/setup-node@v2.1.5
      with:
        node-version: "16.9.1"
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v1
      with:
        java-version: '1.8'
        distribution: 'adopt'
        

        # cache the dependencies to speed up the build
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

      # install dependencies
    - name: Install dependencies
      run: npm i

    - name: Depcheck
      uses: dependency-check/Dependency-Check_Action@main
      env:
        JAVA_HOME: /opt/jdk
      id: Depcheck
      with:
        project: 'Npm_Project_Githubaction'
        path: '.'
        format: 'HTML'
        out: 'reports' # this is the default, no need to specify unless you wish to override it
        # args: >
        #   --failOnCVSS 10
        #   --enableRetired
    - name: Upload Test results
      uses: actions/upload-artifact@master
      with:
         name: Depcheck report
         path: ${{github.workspace}}/reports

      # build the react app
    - name: Build
      run: npm run build

    - name: Create Tar file
      run: tar -czvf npm.tar.gz -C build .
   
    - name: Archive Artifact
      uses: actions/upload-artifact@v2
      with:
        name: react-artifact
        path: build/ 

   

    - name: Display Contents of Downloaded Artifact Directory
      run: ls -l ${{ github.workspace }}
    - name: Nexus Repo Publish
      uses: sonatype-nexus-community/nexus-repo-github-action@master
      with:
        serverUrl: http://13.127.85.183:8082
        username: admin
        password: admin
        format: raw
        repository: npm_githubactions
        coordinates: groupId=QA artifactId=npm version=${{ github.run_number }}
        assets: extension=tar.gz
        filename: npm
        
    - name: Build & push Docker image
      uses: mr-smithers-excellent/docker-build-push@v5
      with:
        image: ramansingh2000/nodeimage1
        tags: latest
        registry: docker.io
        dockerfile: Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Trivy Scan
      uses:  aquasecurity/trivy-action@master
      with:
        image-ref: ramansingh2000/nodeimage1:latest
        format: 'table'
        exit-code: '0'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

